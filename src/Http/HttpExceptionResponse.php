<?php

namespace App\Http;

use Symfony\Component\HttpFoundation\JsonResponse;

/**
 * HTTP exception response based on RFC7807
 */
class HttpExceptionResponse extends JsonResponse
{
    /**
     * @param string|null $type       A URI reference [RFC3986] that identifies the problem type
     * @param string      $title      A short, human-readable summary of the problem type
     * @param int         $status     The HTTP status code [RFC7231] generated by the origin server for this occurrence of the problem
     * @param mixed[]     $violations The validations constraints violations for a given form
     * @param mixed[]     $headers    headers of the response
     * @param bool        $json       If the data is already a JSON string
     */
    public function __construct(
        string $type = null,
        string $title = 'An error occured',
        int $status = 200,
        array $violations = [],
        array $headers = [],
        bool $json = false
    ) {
        parent::__construct($this->format($type, $title, $status, $violations), $status, $headers, $json);
    }

    /**
     * Format the API response.
     *
     * @param string  $type       A URI reference [RFC3986] that identifies the problem type
     * @param string  $title      A short, human-readable summary of the problem type
     * @param int     $status     The HTTP status code [RFC7231] generated by the origin server for this occurrence of the problem
     * @param mixed[] $violations The validations constraints violations for a given form
     *
     * @return mixed[]
     */
    private function format(
        string $type,
        string $title,
        int $status,
        array $violations
    ): array {
        $response = [];

        if ($type) {
            $response['type'] = $type;
        }

        $response['title'] = $title;
        $response['status'] = $status;

        if ($violations) {
            $response['violations'] = $violations;
        }

        return $response;
    }
}
